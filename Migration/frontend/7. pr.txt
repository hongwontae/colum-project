1. pr는 두 개로 구분되어야 한다.
=> 하나는 공용 pr, 하나는 개인 pr
=> 그렇다면 로그인 안한 사용자, 로그인 한 사용자 모두 처음에는 내비게이션을 통해 공용 pr를 보여준다.
=> 로그인을 성공한 사용자는 공용 pr에서 사용자 pr로 넘어갈 수 있다.

2. 그렇다면 클라이언트 라우팅을 2개로 잡는다.
=> 하나는 공용 pr page, 또 다른 하나는 개인 pr page
=> 여기서 공용 pr page와 개인 pr page는 같은 컴포넌트를 많이 공유하기에 
 공용 컴포넌트를 저장하는 폴더를 생성해 공유한다.
=> 그리고 개인 pr은 update, delete가 가능해야 한다. page에 들어왔을 떄


3. play-result의 전체 결과는 페이징하여 데이터를 가져온다.
=> 이 떄 모든 해당되는 데이터를 모두 가져오기에 detail를 보기위해 접근했을 떄 또 http 통신을 할 이유가 없다.
=> 그러나 새로고침한다면? 이런 문제도 있다.
=> 그러니 전체 결과 데이터를 가져올 떄 모조리 가져오는게 아니라 필요한 만큼 가져오는 걸로 효율 업그레이드


4.