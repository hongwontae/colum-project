1. React Router는 내부적으로 history.pushState()을 사용해서 url을 바꾸되 페이지를 
 새로고침 하지 않습니다.


2. 클라이언트 page 이동 hooks => useNavigate() => !!


3. useParams()
=> :/id 즉, segment을 가져올 수 있습니다.
=> const {id} = useParams();


4. const location = useLocation();
=> {
  pathname: "/about",
  search: "?page=2",
  hash: "#section1",
  state: someCustomData,
  key: "randomKey123"
}
=> pathname : 현재 URL 경로
=> search : ?로 시작하는 query string 전체
=> hash : #으로 시작하는 해시
=> state : navigate 호출 시 전달한 커스텀 데이터
=> key : 내부적으로 라우트 식별에 쓰는 고유 키


5. const url = new URL()
=> 문자열은 URL을 받아서 여러 객체를 반환하는 브라우저 표준 Web API입니다.
5-1. url.href : 전체 URL
5-2. url.pathname	: 경로
5-3. url.search : 쿼리스트링
5-4. url.searchParams	 : 쿼리 파라미터를 다룰 수 있는 객체
(url.searchParams(key)를 통해 query-param을 얻을 수 있습니다.)
5-5. url.hash	: 해시


6. const params = new URLSearchParams("?page=1&sort=asc")
=> params.get("page") => 1

6-1. get(key) => key에 대한 value
6-2. set(key, value) => key=value를 설정합니다. 이미 존재한다면 덮어씁니다.
6-3. delete(key) => 해당되는 key-value를 제거합니다.
